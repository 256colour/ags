project(ags)
cmake_minimum_required(VERSION 2.8)
set(COMMON "${CMAKE_CURRENT_SOURCE_DIR}/Common")

include(FindPkgConfig)

if(CMAKE_COMPILER_IS_GNUCC OR CMAKE_COMPILER_IS_GNUCXX)
	# For now, the code base isn't 64-bit clean
	add_definitions(-m32)
	link_libraries(-m32)
endif()

pkg_check_modules(ALLEGRO QUIET allegro)
pkg_check_modules(OGG QUIET ogg)
pkg_check_modules(VORBIS QUIET vorbis)
pkg_check_modules(VORBISFILE QUIET vorbisfile)
pkg_check_modules(THEORA QUIET theora)
add_definitions(${ALLEGRO_CFLAGS_OTHER} ${OGG_CFLAGS_OTHER} ${VORBIS_CFLAGS_OTHER} ${VORBISFILE_CFLAGS_OTHER} ${THEORA_CFLAGS_OTHER})
find_path(ALLEGRO_INCLUDE_DIR allegro.h HINTS ${ALLEGRO_INCLUDEDIR} ${ALLEGRO_INCLUDE_DIRS})
find_path(OGG_INCLUDE_DIR ogg/ogg.h HINTS ${OGG_INCLUDEDIR} ${OGG_INCLUDE_DIRS})
find_path(VORBIS_INCLUDE_DIR vorbis/vorbisenc.h HINTS ${VORBIS_INCLUDEDIR} ${VORBIS_INCLUDE_DIRS})
find_path(VORBISFILE_INCLUDE_DIR vorbis/vorbisfile.h HINTS ${VORBISFILE_INCLUDEDIR} ${VORBISFILE_INCLUDE_DIRS})
find_path(THEORA_INCLUDE_DIR theora/theora.h HINTS ${THEORA_INCLUDEDIR} ${THEORA_INCLUDE_DIRS})
find_path(LIBCDA_INCLUDE_DIR libcda.h HINTS ${CMAKE_INSTALL_PREFIX}/include ${CMAKE_INSTALL_PREFIX}/include/libcda /usr/include/libcda /usr/local/include/libcda)
find_path(ALFONT_INCLUDE_DIR alfont.h HINTS ${CMAKE_INSTALL_PREFIX}/include ${CMAKE_INSTALL_PREFIX}/include/alfont /usr/include/alfont /usr/local/include/alfont ${ALLEGRO_INCLUDEDIR})
find_path(DUMB_INCLUDE_DIR dumb.h HINTS ${CMAKE_INSTALL_PREFIX}/include ${CMAKE_INSTALL_PREFIX}/include/dumb /usr/include/dumb /usr/local/include/dumb)
find_path(ALDUMB_INCLUDE_DIR aldumb.h HINTS ${CMAKE_INSTALL_PREFIX}/include ${CMAKE_INSTALL_PREFIX}/include/dumb /usr/include/dumb /usr/local/include/dumb)
find_library(ALLEGRO_LIBRARY NAMES alleg HINTS ${ALLEGRO_LIBDIR} ${ALLEGRO_LIBRARY_DIRS})
find_library(OGG_LIBRARY NAMES ogg HINTS ${OGG_LIBDIR} ${OGG_LIBRARY_DIRS})
find_library(VORBIS_LIBRARY NAMES vorbis HINTS ${VORBIS_LIBDIR} ${VORBIS_LIBRARY_DIRS})
find_library(VORBISFILE_LIBRARY NAMES vorbisfile HINTS ${VORBISFILE_LIBDIR} ${VORBISFILE_LIBRARY_DIRS})
find_library(THEORA_LIBRARY NAMES theora HINTS ${THEORA_LIBDIR} ${THEORA_LIBRARY_DIRS})
find_library(LIBCDA_LIBRARY NAMES cda)
find_library(ALFONT_LIBRARY NAMES alfont HINTS ${ALLEGRO_LIBDIR} ${ALLEGRO_LIBRARY_DIRS})
find_library(DUMB_LIBRARY NAMES dumb HINTS ${ALLEGRO_LIBDIR} ${ALLEGRO_LIBRARY_DIRS})
find_library(ALDUMB_LIBRARY NAMES aldmb HINTS ${ALLEGRO_LIBDIR} ${ALLEGRO_LIBRARY_DIRS})

if(NOT ALLEGRO_LIBRARY OR NOT ALLEGRO_INCLUDE_DIR)
	message(FATAL_ERROR "Couldn't find Allegro. Please install Allegro (known good version: 4.4.1.1) from http://alleg.sf.net/")
endif()
if(NOT OGG_LIBRARY OR NOT OGG_INCLUDE_DIR)
	message(FATAL_ERROR "Couldn't find Ogg. Please install Ogg (known good version: 1.2.2) from http://www.xiph.org/ogg")
endif()
if(NOT VORBIS_LIBRARY OR NOT VORBIS_INCLUDE_DIR)
	message(FATAL_ERROR "Couldn't find Vorbis. Please install Vorbis (known good version: 1.3.2) from http://www.xiph.org/vorbis")
endif()
if(NOT VORBISFILE_LIBRARY OR NOT VORBISFILE_INCLUDE_DIR)
	message(FATAL_ERROR "Couldn't find Vorbisfile. Please install Vorbis (known good version: 1.3.2) from http://www.xiph.org/vorbis")
endif()
if(NOT THEORA_LIBRARY OR NOT THEORA_INCLUDE_DIR)
	message(FATAL_ERROR "Couldn't find Theora. Please install Theora (known good version: 1.2.0-alpha1) from http://theora.org/")
endif()
if(NOT LIBCDA_LIBRARY OR NOT LIBCDA_INCLUDE_DIR)
	message(FATAL_ERROR "Couldn't find libcda. Please install libcda (known good version: 0.5) from http://tjaden.strangesoft.net/libcda/")
endif()
if(NOT ALFONT_LIBRARY OR NOT ALFONT_INCLUDE_DIR)
	message(FATAL_ERROR "Couldn't find alfont. Please install alfont (known good version: 2.0.9) from http://chernsha.sitesled.com/")
endif()
if(NOT DUMB_LIBRARY OR NOT DUMB_INCLUDE_DIR OR NOT ALDUMB_LIBRARY OR NOT ALDUMB_INCLUDE_DIR)
	message(FATAL_ERROR "Couldn't find libdumb or libaldumb. Please install libdumb (known good version: 0.9.3) from http://dumb.sourceforge.net/")
endif()

include_directories(${ALLEGRO_INCLUDE_DIR} ${OGG_INCLUDE_DIR} ${VORBIS_INCLUDE_DIR} ${VORBISFILE_INCLUDE_DIR} ${THEORA_INCLUDE_DIR} ${LIBCDA_INCLUDE_DIR} ${ALFONT_INCLUDE_DIR} ${DUMB_INCLUDE_DIR} ${ALDUMB_INCLUDE_DIR})

include_directories(${CMAKE_CURRENT_SOURCE_DIR}/Engine)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/Common)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/Common/libinclude)

# We don't support the Editor for now
add_definitions(-DTHIS_IS_THE_ENGINE)
add_subdirectory(Engine)
